name: setup-pesde
description: Installs Pesde and Lune CLIs, and authenticates with the Pesde registry

inputs:
  lune-version:
    description: "Version of Lune to install"
    required: false
  pesde-version:
    description: "Version of Pesde to install"
    required: false
  cache:
    description: "Whether or not to cache the Pesde install"
    default: "false"
    required: false
  token:
    description: "Token for publishing to the Pesde registry"
    required: false
  path:
    description: "The path to the pesde config file, typically used in monorepos"
    default: "."
    required: false

runs:
  using: composite
  steps:
    - name: Download Pesde and Lune
      shell: bash
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: |
        case ${{ runner.arch }} in
          "X86" | "X64") fileArch="x86_64" ;;
          "ARM" | "ARM64") fileArch="aarch64" ;;
        esac

        case ${{ runner.os }} in
          Linux) pattern="*-linux-$fileArch.zip" ;;
          macOS) pattern="*-macos-$fileArch.zip" ;;
          Windows) pattern="*-windows-$fileArch.zip" ;;
        esac

        gh --version
        gh release download ${{ inputs.pesde-version }} -R pesde-pkg/pesde -p "$pattern"
        gh release download ${{ inputs.lune-version }} -R lune-org/lune -p "$pattern"

    - name: Install Pesde and Lune
      shell: bash
      run: |
        mv lune*.zip lune.zip
        mv pesde*.zip pesde.zip
        chmod +x pesde lune
        ./pesde self-install

    - name: Remove artifacts
      shell: bash
      run: |
        rm pesde.zip lune.zip
        if ${{ runner.os == 'Windows' }}; then
          rm pesde.exe
        else
          rm pesde
        fi

    - name: Set Windows env variables
      if: runner.os == 'Windows'
      shell: powershell
      run: |
        echo "$HOME/.pesde/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        echo "$PWD" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - name: Set env variables
      if: runner.os != 'Windows'
      shell: bash
      run: |
        echo "$HOME/.pesde/bin" >> $GITHUB_PATH
        echo "$PWD" >> $GITHUB_PATH

    - name: Cache Pesde
      if: ${{ inputs.cache == 'true' }}
      uses: actions/cache@v4
      with:
        path: |
         ~/.pesde
        key: ${{ runner.os }}-pesde-${{hashFiles(format('{0}/{1}', inputs.path, 'pesde.toml'))}}

    - name: Authenticate into Pesde registry
      if: inputs.token != ''
      shell: bash
      run: pesde auth login --token "${{ inputs.token }}"

branding:
  icon: box
  color: blue
